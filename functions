theory
Arrow functions:

⇒ Es6 version
⇒ More readable and more structure
⇒ Anonymous functions
⇒ without function name they are assigned to the variable
Example:
let c =() => {
 console.log(“hello class”)
}
c()

Callback function
A callback function is a function that is passed argument to another function

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<body>
    <script>
        // //arrow function without parameters
        // let c=() => {
        //     console.log("hello class")
        // }
        // c()
        //arrow function with parameters
        //  let x=(x,y) => {
        //     console.log(x+y)
        //  }
        //  x(20,30)
        //  x(40,50)
        // Arrow function with one  argument
        //without using parenthesis
        // let greet=x => console.log(x);
        // greet("hello")
        //without argument
        // let greet=() => console.log("hello everyone")
        // greet()
         //arrow function as an expression
        //  let age=18;
        //  let welcome=(age<18)?
        //  () => console.log("hello sree"):
        //  () => console.log("hello venkat");
        //  welcome()

        //Synchronous // used for mutliple tasks at a time
        // function task1(){
        //     console.log("Task1 : start")
        // }
        // function task2(){
        //     console.log("Task2 : start")
        // }
        // function task3(){
        //     console.log("Task3 : start")
        // }
        // task1()
        // task2()
        // task3()
       //Asynchronous functions: mutliple tasks at a time
        // console.log("hii raviteja");
        //   setTimeout(() =>{
        //     console.log("hii I am waiting")
        //   },5000);
        //   console.log("I am in the lab")
        //   console.log("I am in college")

        //callback function
        function greet(name,callback){
            console.log(`hello, ${name}`)
            callback(); 
            //this calls the callback function after greeting
        }
        function saygoodbye(){
            console.log("goodbye")
        }
        //call greet and pass goodbye as the callback
        greet("sam",saygoodbye)
        //we have passed the function in the argument

    </script>
</body>
</html>
